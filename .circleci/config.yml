version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:16.13.2
    resource_class: small
    steps:
      # DEFINE HERE YOUR TESTS AND ARTIFACTS
      - run: echo "BUILD & TEST"
  setup:
    docker:
      - image: cimg/base:stable
    resource_class: small
    environment:
      FORCE_UPDATE_AWS_BINARY: 0
      KELSUS_CDK_VERSION: "1.0.1"
    steps:
      - checkout
      # AWS binary
      - restore_cache:
          name: Getting AWS binary
          key: v1-aws-
      - run:
          name: Bringing AWS binary
          command: |
            if [[ ! -f ~/.local/bin/aws  ||  "$FORCE_UPDATE_AWS_BINARY" -eq 1 ]]; then
              echo 'Downloading AWS binary'
              curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip --output awscliv2.zip
              unzip awscliv2.zip
              ./aws/install -u -i ~/aws-cli -b ~/.local/bin
            else
                echo 'AWS binary already in environment'
            fi
      - save_cache:
          name: "Saving AWS binary"
          paths:
            - ~/aws-cli
            - ~/.local/bin/aws
          key: v1-aws-{{ checksum "~/.local/bin/aws" }}
      # Kelsus CDK binary
      - restore_cache:
          name: Getting Kelsus CDK binary
          key: kelsus-cdk-v1.0.1
      - run:
          name: Bringing Kelsus CDK binary
          command: |
            if [[ ! -f ~/kelsus-cdk.sh ]]; then
              echo 'Downloading Kelsus CDK binary'
              aws s3 cp s3://kelsus-cdk/$KELSUS_CDK_VERSION/kelsus-cdk kelsus-cdk
            else
                echo 'Kelsus CDK binary already in environment'
            fi
      - save_cache:
          name: "Saving Kelsus CDK binary"
          paths:
            - ~/kelsus-cdk
          key: kelsus-cdk-v1.0.1
      - run: chmod +x kelsus-cdk
      # Save binaries
      - persist_to_workspace:
          root: .
          paths:
            - kelsus-cdk
            - package.json
            - ~/aws-cli
            - ~/.local/bin/aws
  bump:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - run: ./kelsus-cdk bump

  deploy:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: ./kelsus-cdk deploy --action deploy
      - persist_to_workspace:
          root: .
          paths:
            - DEPLOY_STATUS

  tag:
    docker:
      - image: cimg/base:stable
    resource_class: small
    environment:
      SKIP_MAIN_CONTROL: 0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: ./kelsus-cdk tag

  check:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: echo "CDK DIFF"

  prepare-main:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: ./kelsus-cdk prepare

  verify:
    docker:
      - image: cimg/base:stable
    resource_class: small
    environment:
      KELSUS_CDK_VERSION: "1.0.1"
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: ./kelsus-cdk verify

  pointers:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: ./kelsus-cdk pointers ${cat DEPLOY_STATUS}

workflows:
  production:
    jobs:
      - setup:
          filters:
            tags:
              only:
                - /[D|d]eploy/
                - /[R|r]ollback-?.*/
            branches:
              ignore: /.*/
      - verify:
          requires:
            - setup
          filters:
            tags:
              only:
                - /[D|d]eploy/
                - /[R|r]ollback-?.*/
      - deploy:
          requires:
            - verify
          filters:
            tags:
              only:
                - /[D|d]eploy/
                - /[R|r]ollback-?.*/
      - pointers:
          requires:
            - deploy
          filters:
            tags:
              only:
                - /[D|d]eploy/
                - /[R|r]ollback-?.*/

  development:
    jobs:
      - build
      - setup:
          requires:
            - build
      - bump:
          requires:
            - setup
          filters:
            branches:
              only:
                - /[D|d]evelop-?.*/
                - /[D|d]evelopment/
                - /[S|s]taging/
                - /[H|h]otfix(es)?/
      - deploy:
          requires:
            - bump
      - tag:
          requires:
            - build
            - deploy
          filters:
            branches:
              only:
                - /[D|d]evelop-?.*/
                - /[D|d]evelopment/
                - /[S|s]taging/
                - /[H|h]otfix(es)?/
                - /[M|m]ain/
                - /[M|m]aster/
      - check:
          requires:
            - tag
          filters:
            branches:
              only:
                - /[M|m]ain/
                - /[M|m]aster/
      - approve:
          type: approval
          requires:
            - check
      - prepare-main:
          requires:
            - approve
